{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alice\\\\Desktop\\\\vk4\\\\who\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport { MainPage } from './components/MainPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const ROUTES = {\n    HOME: 'home',\n    INTRO: 'intro'\n  };\n  const STORAGE_KEYS = {\n    STATE: 'state',\n    STATUS: 'viewStatus'\n  };\n  const [activePanel, setActivePanel] = useState('home');\n  const [fetchedUser, setUser] = useState(null);\n  const [fetchedFriends, setfetchedFriends] = useState([]);\n  const [fetchedState, setFetchedState] = useState(null);\n  const [popout, setPopout] = useState( /*#__PURE__*/_jsxDEV(ScreenSpinner, {\n    size: \"large\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 39\n  }, this));\n  const [userHasSeenIntro, setUserHasSeenIntro] = useState(false);\n  const [snackbar, setSnackbar] = useState(null); // useEffect(() => {\n  // \tbridge.subscribe(({ detail: { type, data } }) => {\n  // \t\tif (type === 'VKWebAppUpdateConfig') {\n  // \t\t\tconst schemeAttribute = document.createAttribute('scheme');\n  // \t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n  // \t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n  // \t\t}\n  // \t});\n  // \tasync function fetchData() {\n  // \t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n  // \t\tconst sheetState = await bridge.send('VKWebAppStorageGet', { keys: [STORAGE_KEYS.STATE, STORAGE_KEYS.STATUS] });\n  // \t\tconst friends = await bridge.send('VKWebAppGetFriends');\n  // \t\tif (Array.isArray(sheetState.keys)) {\n  // \t\t\tconst data = {};\n  // \t\t\tsheetState.keys.forEach(({ key, value }) => {\n  // \t\t\t\ttry {\n  // \t\t\t\t\tdata[key] = value ? JSON.parse(value) : {};\n  // \t\t\t\t\tswitch (key) {\n  // \t\t\t\t\t\tcase STORAGE_KEYS.STATE:\n  // \t\t\t\t\t\t\tsetFetchedState(data[STORAGE_KEYS.STATE]);\n  // \t\t\t\t\t\t\tbreak;\n  // \t\t\t\t\t\tcase STORAGE_KEYS.STATUS:\n  // \t\t\t\t\t\t\tif (data[key] && data[key].hasSeenIntro) {\n  // \t\t\t\t\t\t\t\tsetActivePanel(ROUTES.HOME);\n  // \t\t\t\t\t\t\t\tsetUserHasSeenIntro(true);\n  // \t\t\t\t\t\t\t}\n  // \t\t\t\t\t\t\tbreak;\n  // \t\t\t\t\t\tdefault:\n  // \t\t\t\t\t\t\tbreak;\n  // \t\t\t\t\t}\n  // \t\t\t\t} catch (error) {\n  // \t\t\t\t\tsetSnackbar(<Snackbar\n  // \t\t\t\t\t\tlayout='vertical'\n  // \t\t\t\t\t\tonClose={() => setSnackbar(null)}\n  // \t\t\t\t\t\tbefore={<Avatar size={24} style={{ backgroundColor: 'var(--dynamic_red)' }}><Icon24Error fill='#fff' width={14} height={14} /></Avatar>}\n  // \t\t\t\t\t\tduration={900}\n  // \t\t\t\t\t>\n  // \t\t\t\t\t\tПроблема с получением данных из Storage\n  // \t\t\t\t\t</Snackbar>\n  // \t\t\t\t\t);\n  // \t\t\t\t\tsetFetchedState({});\n  // \t\t\t\t}\n  // \t\t\t});\n  // \t\t} else {\n  // \t\t\tsetFetchedState({});\n  // \t\t}\n  // \t\tsetUser(user);\n  // \t\tsetPopout(null);\n  // \t}\n  // \tfetchData();\n  // }, []);\n\n  const go = e => {\n    setActivePanel(e.currentTarget.dataset.to);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ConfigProvider, {\n    children: /*#__PURE__*/_jsxDEV(AdaptivityProvider, {\n      children: /*#__PURE__*/_jsxDEV(AppRoot, {\n        children: /*#__PURE__*/_jsxDEV(SplitLayout, {\n          popout: popout,\n          children: /*#__PURE__*/_jsxDEV(SplitCol, {\n            children: /*#__PURE__*/_jsxDEV(View, {\n              activePanel: activePanel,\n              children: [/*#__PURE__*/_jsxDEV(Home, {\n                id: \"home\",\n                fetchedUser: fetchedUser,\n                go: go\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Persik, {\n                id: \"persik\",\n                go: go\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(MainPage, {\n                id: \"mainPage\",\n                fetchedUser: fetchedFriends\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"yBVM0QQ/Y2PkfAlPk0Qg7VUM/HQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","bridge","View","ScreenSpinner","AdaptivityProvider","AppRoot","ConfigProvider","SplitLayout","SplitCol","Home","Persik","MainPage","App","ROUTES","HOME","INTRO","STORAGE_KEYS","STATE","STATUS","activePanel","setActivePanel","fetchedUser","setUser","fetchedFriends","setfetchedFriends","fetchedState","setFetchedState","popout","setPopout","userHasSeenIntro","setUserHasSeenIntro","snackbar","setSnackbar","go","e","currentTarget","dataset","to"],"sources":["C:/Users/Alice/Desktop/vk4/who/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport { MainPage } from './components/MainPage';\n\nconst App = () => {\n\n\tconst ROUTES = {\n\t\tHOME: 'home',\n\t\tINTRO: 'intro',\n\t};\n\n\tconst STORAGE_KEYS = {\n\t\tSTATE: 'state',\n\t\tSTATUS: 'viewStatus',\n\t};\n\n\tconst [activePanel, setActivePanel] = useState('home');\n\tconst [fetchedUser, setUser] = useState(null);\n\tconst [fetchedFriends, setfetchedFriends] = useState([]);\n\tconst [fetchedState, setFetchedState] = useState(null);\n\tconst [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n\tconst [userHasSeenIntro, setUserHasSeenIntro] = useState(false);\n\tconst [snackbar, setSnackbar] = useState(null);\n\n\t// useEffect(() => {\n\n\t// \tbridge.subscribe(({ detail: { type, data } }) => {\n\t// \t\tif (type === 'VKWebAppUpdateConfig') {\n\t// \t\t\tconst schemeAttribute = document.createAttribute('scheme');\n\t// \t\t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\n\t// \t\t\tdocument.body.attributes.setNamedItem(schemeAttribute);\n\t// \t\t}\n\t// \t});\n\n\t// \tasync function fetchData() {\n\t// \t\tconst user = await bridge.send('VKWebAppGetUserInfo');\n\t// \t\tconst sheetState = await bridge.send('VKWebAppStorageGet', { keys: [STORAGE_KEYS.STATE, STORAGE_KEYS.STATUS] });\n\t// \t\tconst friends = await bridge.send('VKWebAppGetFriends');\n\n\t// \t\tif (Array.isArray(sheetState.keys)) {\n\t// \t\t\tconst data = {};\n\t// \t\t\tsheetState.keys.forEach(({ key, value }) => {\n\t// \t\t\t\ttry {\n\t// \t\t\t\t\tdata[key] = value ? JSON.parse(value) : {};\n\t// \t\t\t\t\tswitch (key) {\n\t// \t\t\t\t\t\tcase STORAGE_KEYS.STATE:\n\t// \t\t\t\t\t\t\tsetFetchedState(data[STORAGE_KEYS.STATE]);\n\t// \t\t\t\t\t\t\tbreak;\n\t// \t\t\t\t\t\tcase STORAGE_KEYS.STATUS:\n\t// \t\t\t\t\t\t\tif (data[key] && data[key].hasSeenIntro) {\n\t// \t\t\t\t\t\t\t\tsetActivePanel(ROUTES.HOME);\n\t// \t\t\t\t\t\t\t\tsetUserHasSeenIntro(true);\n\t// \t\t\t\t\t\t\t}\n\t// \t\t\t\t\t\t\tbreak;\n\t// \t\t\t\t\t\tdefault:\n\t// \t\t\t\t\t\t\tbreak;\n\t// \t\t\t\t\t}\n\t// \t\t\t\t} catch (error) {\n\t// \t\t\t\t\tsetSnackbar(<Snackbar\n\t// \t\t\t\t\t\tlayout='vertical'\n\t// \t\t\t\t\t\tonClose={() => setSnackbar(null)}\n\t// \t\t\t\t\t\tbefore={<Avatar size={24} style={{ backgroundColor: 'var(--dynamic_red)' }}><Icon24Error fill='#fff' width={14} height={14} /></Avatar>}\n\t// \t\t\t\t\t\tduration={900}\n\t// \t\t\t\t\t>\n\t// \t\t\t\t\t\tПроблема с получением данных из Storage\n\t// \t\t\t\t\t</Snackbar>\n\t// \t\t\t\t\t);\n\t// \t\t\t\t\tsetFetchedState({});\n\t// \t\t\t\t}\n\t// \t\t\t});\n\n\t// \t\t} else {\n\t// \t\t\tsetFetchedState({});\n\t// \t\t}\n\t// \t\tsetUser(user);\n\t// \t\tsetPopout(null);\n\t// \t}\n\t// \tfetchData();\n\t// }, []);\n\n\n\tconst go = e => {\n\t\tsetActivePanel(e.currentTarget.dataset.to);\n\t};\n\n\treturn (\n\t\t<ConfigProvider>\n\t\t\t<AdaptivityProvider>\n\t\t\t\t<AppRoot>\n\t\t\t\t\t<SplitLayout popout={popout}>\n\t\t\t\t\t\t<SplitCol>\n\t\t\t\t\t\t\t<View activePanel={activePanel}>\n\t\t\t\t\t\t\t\t<Home id='home' fetchedUser={fetchedUser} go={go} />\n\t\t\t\t\t\t\t\t<Persik id='persik' go={go} />\n\t\t\t\t\t\t\t\t<MainPage id='mainPage' fetchedUser={fetchedFriends} />\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</SplitCol>\n\t\t\t\t\t</SplitLayout>\n\t\t\t\t</AppRoot>\n\t\t\t</AdaptivityProvider>\n\t\t</ConfigProvider>\n\t);\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,IAAT,EAAeC,aAAf,EAA8BC,kBAA9B,EAAkDC,OAAlD,EAA2DC,cAA3D,EAA2EC,WAA3E,EAAwFC,QAAxF,QAAwG,iBAAxG;AACA,OAAO,+BAAP;AAEA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,QAAT,QAAyB,uBAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAEjB,MAAMC,MAAM,GAAG;IACdC,IAAI,EAAE,MADQ;IAEdC,KAAK,EAAE;EAFO,CAAf;EAKA,MAAMC,YAAY,GAAG;IACpBC,KAAK,EAAE,OADa;IAEpBC,MAAM,EAAE;EAFY,CAArB;EAKA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,MAAD,CAA9C;EACA,MAAM,CAACsB,WAAD,EAAcC,OAAd,IAAyBvB,QAAQ,CAAC,IAAD,CAAvC;EACA,MAAM,CAACwB,cAAD,EAAiBC,iBAAjB,IAAsCzB,QAAQ,CAAC,EAAD,CAApD;EACA,MAAM,CAAC0B,YAAD,EAAeC,eAAf,IAAkC3B,QAAQ,CAAC,IAAD,CAAhD;EACA,MAAM,CAAC4B,MAAD,EAASC,SAAT,IAAsB7B,QAAQ,eAAC,QAAC,aAAD;IAAe,IAAI,EAAC;EAApB;IAAA;IAAA;IAAA;EAAA,QAAD,CAApC;EACA,MAAM,CAAC8B,gBAAD,EAAmBC,mBAAnB,IAA0C/B,QAAQ,CAAC,KAAD,CAAxD;EACA,MAAM,CAACgC,QAAD,EAAWC,WAAX,IAA0BjC,QAAQ,CAAC,IAAD,CAAxC,CAlBiB,CAoBjB;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA,MAAMkC,EAAE,GAAGC,CAAC,IAAI;IACfd,cAAc,CAACc,CAAC,CAACC,aAAF,CAAgBC,OAAhB,CAAwBC,EAAzB,CAAd;EACA,CAFD;;EAIA,oBACC,QAAC,cAAD;IAAA,uBACC,QAAC,kBAAD;MAAA,uBACC,QAAC,OAAD;QAAA,uBACC,QAAC,WAAD;UAAa,MAAM,EAAEV,MAArB;UAAA,uBACC,QAAC,QAAD;YAAA,uBACC,QAAC,IAAD;cAAM,WAAW,EAAER,WAAnB;cAAA,wBACC,QAAC,IAAD;gBAAM,EAAE,EAAC,MAAT;gBAAgB,WAAW,EAAEE,WAA7B;gBAA0C,EAAE,EAAEY;cAA9C;gBAAA;gBAAA;gBAAA;cAAA,QADD,eAEC,QAAC,MAAD;gBAAQ,EAAE,EAAC,QAAX;gBAAoB,EAAE,EAAEA;cAAxB;gBAAA;gBAAA;gBAAA;cAAA,QAFD,eAGC,QAAC,QAAD;gBAAU,EAAE,EAAC,UAAb;gBAAwB,WAAW,EAAEV;cAArC;gBAAA;gBAAA;gBAAA;cAAA,QAHD;YAAA;cAAA;cAAA;cAAA;YAAA;UADD;YAAA;YAAA;YAAA;UAAA;QADD;UAAA;UAAA;UAAA;QAAA;MADD;QAAA;QAAA;QAAA;MAAA;IADD;MAAA;MAAA;MAAA;IAAA;EADD;IAAA;IAAA;IAAA;EAAA,QADD;AAiBA,CAlGD;;GAAMX,G;;KAAAA,G;AAoGN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}